@using Models.Dashboard

<MudCard Style="min-width: 400px; min-height: 200px;">
    <MudCardHeader style="padding-bottom: 0px;">
        <CardHeaderContent>
            <MudText Typo="Typo.overline" Color="@headerColor" Style="font-size: 1.2rem">
                @title!.ToUpper() THIS MONTH
            </MudText>
        </CardHeaderContent>
        <CardHeaderActions>
            <MudIcon Icon="@headerIcon" Color="@headerColor" Size="Size.Large" Style="font-size: 3.25rem" />
        </CardHeaderActions>
    </MudCardHeader>

    <MudCardContent style="padding-top: 0px; padding-bottom: 32px;">
        <MudText Typo="Typo.h2">@dolarSign@SummedAmount</MudText>
        @if (PercentageChange == 0) {
            <MudText Typo="Typo.body1">@title same as last month</MudText>
        }
        else if (PercentageChange < 0) {
            <MudText Inline>
                <MudIcon Icon="@Icons.Filled.ArrowDownward" Color="@percentageLessThanZeroColor" Style="font-size: 1.2rem"/>
                <MudText Color="@percentageLessThanZeroColor" Inline Typo="Typo.body1">@PercentageChange%</MudText>
                <MudText Inline Typo="Typo.body1">Since last month</MudText>
            </MudText>
        }
        else {
            <MudText Inline> 
                @if (PercentageChange == decimal.MaxValue) {
                    <MudText Inline Typo="Typo.body1">Last month data not found</MudText>
                }
                else {
                    <MudIcon Icon="@Icons.Filled.ArrowUpward" Color="@percentageGreaterThanZeroColor" Style="font-size: 1.2rem"/> 
                    <MudText Color="@percentageGreaterThanZeroColor" Inline Typo="Typo.body1">@PercentageChange%</MudText>
                    <MudText Inline Typo="Typo.body1">Since last month</MudText>
                }
            </MudText>
        }
    </MudCardContent>
</MudCard>





@code {
    [Parameter, EditorRequired]
    public ControllerEnum Controller {get;set;}

    [Parameter, EditorRequired]
    public decimal PercentageChange {get;set;}

    [Parameter, EditorRequired]
    public decimal SummedAmount {get;set;}


    // Styling and text changes based on given Controller
    string? headerIcon;
    Color headerColor;
    string? title;
    Color percentageLessThanZeroColor = Color.Error;
    Color percentageGreaterThanZeroColor = Color.Success;
    string dolarSign = "$";


    protected override void OnInitialized()
    {
        if (Controller == ControllerEnum.Earnings) {
            title = "Earnings"; 
            headerColor = Color.Success; 
            headerIcon = Icons.Filled.AttachMoney;

        }
        else if (Controller == ControllerEnum.Expenses) {
            title = "Expenses";  
            headerColor = Color.Error;  
            headerIcon = Icons.Filled.MoneyOff;
            percentageLessThanZeroColor = Color.Success;
            percentageGreaterThanZeroColor = Color.Error;
            dolarSign = "-$";
        }
        else if (Controller == ControllerEnum.Profit) {
            title = "Profit";  
            headerColor = Color.Info;  
            headerIcon = Icons.Outlined.Outbound;
        }
        
        StateHasChanged();
    }
}