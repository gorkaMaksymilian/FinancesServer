@using Models.Dashboard
@inject IGetFormatedDataService dataService

<MudCard>
    <MudCardHeader>
        <CardHeaderContent>
            <MudText Typo="Typo.overline" Color="Color.Success" Style="font-size: 1.2rem">
                @Title.ToUpper()
            </MudText>
        </CardHeaderContent>
        <CardHeaderActions>
            <MudIcon Icon="@Icons.Filled.AttachMoney" Color="Color.Success" Size="Size.Large" Style="font-size: 3.25rem" />
        </CardHeaderActions>
    </MudCardHeader>

    <MudCardContent>
        <MudText>Story of the day</MudText>
        <MudText Typo="Typo.body2">The quick, brown fox jumps over a lazy dog.</MudText>
    </MudCardContent>

    <MudCardActions>
        <MudButton Variant="Variant.Text" Color="Color.Primary">Learn More</MudButton>
    </MudCardActions>
</MudCard>

@if (currentMonthIncome is not null) {
    @foreach (var item in currentMonthIncome) {
        <p>@item.Amount @item.Category</p>
    }
        

}



@code {
    [Parameter] 
    public string Title {get;set;} = "Set Title parameter to change this text.";

    DateTime currentDate = DateTime.Today;
    IEnumerable<MonthlyItem>? currentMonthIncome;

    protected override async Task OnInitializedAsync()
    {
        currentMonthIncome = await dataService.GetMonthlyEarnings(currentDate.Month, currentDate.Year);
        StateHasChanged();
    }
}