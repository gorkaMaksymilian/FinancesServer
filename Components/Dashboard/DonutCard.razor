@using Models.Dashboard

<MudCard Style="height: 500px;">
    <MudCardHeader style="padding-bottom: 0px;">
        <CardHeaderContent>
            <MudText Typo="Typo.overline" Color="@headerColor" Style="font-size: 1.1rem">
                @title!.ToUpper() THIS MONTH BY CATEGORY
            </MudText>
        </CardHeaderContent>
    </MudCardHeader>

    <MudCardContent style="padding-top: 0px; padding-bottom: 32px;">
        <MudChart ChartType="ChartType.Donut" Width="300px" Height="300px" InputData="@AmountArray" InputLabels="@Labels" 
                  SelectedIndex="@chartIndex" SelectedIndexChanged="@( (newIndex) => ChangeIndexAndInfo(newIndex))"/>

        <MudText Align="Align.Center" Typo="Typo.subtitle2" Style="font-size: 1.7rem;">@selectedCategoryInfo</MudText>
    </MudCardContent>
</MudCard>





@code {
    [Parameter, EditorRequired]
    public double[]? AmountArray {get;set;}

    [Parameter, EditorRequired]
    public string[]? Labels {get;set;}

    [Parameter, EditorRequired]
    public ControllerEnum Controller {get;set;}

    int chartIndex = -1;
    string? title;
    Color headerColor;
    string selectedCategoryInfo = "Select category";


    protected override void OnInitialized()
    {
     
        if (Controller == ControllerEnum.Earnings) {
            title = "Earnings"; 
            headerColor = Color.Success;
            
        }
        else if (Controller == ControllerEnum.Expenses) {
            title = "Expenses"; 
            headerColor = Color.Error;
        }

        
        


        StateHasChanged();
    }

    protected void ChangeIndexAndInfo(int newIndex) 
    {
        chartIndex = newIndex;

        if (Labels is not null && AmountArray is not null) 
        {
            selectedCategoryInfo = $"{Labels[newIndex]}: ${AmountArray[newIndex]}";
        }
        StateHasChanged();
    }
}