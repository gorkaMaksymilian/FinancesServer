@inject IDialogService DialogService
@typeparam T



@if (Data is not null)
{
    <MudDataGrid Items="@Data" Hover="@true" Dense="@true" Striped="@true" ReadOnly="@false" EditMode="DataGridEditMode.Form" EditTrigger="DataGridEditTrigger.Manual"
                 T="T" CommittedItemChanges="@CommittedItemChanges" style="margin-top: 40px;">
        <Columns>
            <Column T="T" Field="Id" Title="Id" IsEditable="false"/>
            <Column T="T" Field="Date" Title="Date" ></Column>
            <Column T="T" Field="Description" Title="Description"/>
            <Column T="T" Field="Amount" Title="Amount"/>
            <Column T="T" Field="Category" Title="Category"></Column>

            <Column T="T" CellClass="d-flex justify-end" Sortable="@false">
                <CellTemplate>
                    <MudIconButton Size="@Size.Small" Icon="@Icons.Filled.Delete" OnClick="@(() => DeleteRow(context.Item))"/>
                    
                </CellTemplate>
            </Column>

        </Columns>
        <PagerContent>
            <MudDataGridPager T="T" PageSizeOptions=@(new int[] {5, 10, 20}) />
        </PagerContent>
    </MudDataGrid>
}




@code {
    
    [Parameter]
    public IEnumerable<T>? Data {get;set;}

    
    public void CommittedItemChanges(T item)
    {

    }

    public void DeleteRow(T item)
    {
        object Id = item!.GetType()!.GetProperty("Id")!.GetValue(item)!; 
        string itemType = item.GetType().ToString();

        Console.WriteLine(item!.GetType()!.ToString());
        

        var parameters = new DialogParameters();
        parameters.Add("ContentText", "Do you really want to delete this record? This process cannot be undone.");
        parameters.Add("Id", (int)Id);

        // At this point i can't think of other way to make it work :c
        if (itemType == "FinancesServer.Models.Earnings.Income")
            parameters.Add("Controller", "income");
        else if (itemType == "FinancesServer.Models.Earnings.Expense")
            parameters.Add("Controller", "expense");

        var options = new DialogOptions() { CloseButton = true, MaxWidth = MaxWidth.ExtraSmall };

        DialogService.Show<DeleteDialog>("Delete", parameters, options);
        
    }


}