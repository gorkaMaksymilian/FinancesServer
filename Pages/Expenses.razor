@page "/expenses"
@inject NavigationManager Navigator
@inject HttpClient Http
@inject IReloadOtherComponentService ReloadOtherComponent
@using FinancesServer.Components.Shared
@using Models.Expenses

<PageTitle>Expenses</PageTitle>

<AuthorizeView>
        <Authorized>
            @{
                if (dataLoaded == false){
                    RefreshMe();
                    dataLoaded = true;
                }
            }

            <MudContainer MaxWidth="MaxWidth.Large">
                <MudText Typo="Typo.h2" Align="Align.Center" GutterBottom="true">Update your expenses:</MudText>

                <VariableForm Controller="expense"/>

                <VariableDataGrid Data=@expenses/>
            </MudContainer>
            
        </Authorized>


        <NotAuthorized>
            <MudContainer class="fullscreen">
                <MudText Typo="Typo.h3" Align="Align.Center" Color="Color.Primary" Class="centered">You need to sign in first.</MudText>
            </MudContainer>
        </NotAuthorized>
</AuthorizeView>

<style>
    .fullscreen {
        position: fixed;
        top: 0;
        left: 0;
        bottom: 0;
        right: 0;
        overflow: auto;
    }

    .centered {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        text-align: center;
    }
</style>



@code {
    private List<Expense>? expenses = new List<Expense>();
    private bool dataLoaded = false;
    
    protected override void OnInitialized()
    {
        ReloadOtherComponent.RefreshRequested += RefreshMe;
    }

    private async void RefreshMe()
    {
        expenses = await Http.GetFromJsonAsync<List<Expense>>($"{Navigator.BaseUri}api/expense");
        StateHasChanged();
    }
}